"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const AnimatedTextInput = _reactNativeReanimated.default.createAnimatedComponent(_reactNative.TextInput);

const ReText = props => {
  const {
    text,
    value: _providedValue,
    style
  } = {
    style: {},
    ...props
  };
  const animatedProps = (0, _reactNativeReanimated.useAnimatedProps)(() => {
    return {
      text: `${text}: ${typeof _providedValue.value === 'number' ? _providedValue.value.toFixed(2) : _providedValue.value}`
    };
  }, [_providedValue.value]);
  return /*#__PURE__*/_react.default.createElement(AnimatedTextInput, {
    underlineColorAndroid: "transparent",
    editable: false,
    value: `${text}: ${typeof _providedValue.value === 'number' ? _providedValue.value.toFixed(2) : _providedValue.value}`,
    style: style // @ts-ignore
    ,
    animatedProps: animatedProps
  });
};

var _default = ReText;
exports.default = _default;
//# sourceMappingURL=ReText.js.map