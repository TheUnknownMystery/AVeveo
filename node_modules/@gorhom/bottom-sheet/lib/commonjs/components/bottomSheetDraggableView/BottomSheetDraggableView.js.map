{"version":3,"sources":["BottomSheetDraggableView.tsx"],"names":["BottomSheetDraggableViewComponent","nativeGestureRef","style","children","rest","panGestureRef","enableContentPanningGesture","contentPanGestureHandler","simultaneousHandlers","_providedSimultaneousHandlers","waitFor","activeOffsetX","activeOffsetY","failOffsetX","failOffsetY","refs","push","Array","isArray","containerStyle","styles","container","BottomSheetDraggableView","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,iCAAiC,GAAG,CAAC;AACzCC,EAAAA,gBADyC;AAEzCC,EAAAA,KAFyC;AAGzCC,EAAAA,QAHyC;AAIzC,KAAGC;AAJsC,CAAD,KAKL;AACnC;AACA,QAAMC,aAAa,GAAG,mBAA0B,IAA1B,CAAtB,CAFmC,CAInC;;AACA,QAAM;AACJC,IAAAA,2BADI;AAEJC,IAAAA,wBAFI;AAGJC,IAAAA,oBAAoB,EAAEC,6BAHlB;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA;AARI,MASF,oCATJ,CALmC,CAgBnC;;AACA,QAAMN,oBAAoB,GAAG,oBAAQ,MAAM;AACzC,UAAMO,IAAI,GAAG,EAAb;;AAEA,QAAId,gBAAJ,EAAsB;AACpBc,MAAAA,IAAI,CAACC,IAAL,CAAUf,gBAAV;AACD;;AAED,QAAIQ,6BAAJ,EAAmC;AACjC,UAAIQ,KAAK,CAACC,OAAN,CAAcT,6BAAd,CAAJ,EAAkD;AAChDM,QAAAA,IAAI,CAACC,IAAL,CAAU,GAAGP,6BAAb;AACD,OAFD,MAEO;AACLM,QAAAA,IAAI,CAACC,IAAL,CAAUP,6BAAV;AACD;AACF;;AAED,WAAOM,IAAP;AACD,GAhB4B,EAgB1B,CAACN,6BAAD,EAAgCR,gBAAhC,CAhB0B,CAA7B,CAjBmC,CAmCnC;;AACA,QAAMkB,cAAc,GAAG,oBAAQ,MAAM;AACnC,QAAI,CAACjB,KAAL,EAAY;AACV,aAAOkB,eAAOC,SAAd;AACD;;AAED,QAAIJ,KAAK,CAACC,OAAN,CAAchB,KAAd,CAAJ,EAA0B;AACxB,aAAO,CAACkB,eAAOC,SAAR,EAAmB,GAAGnB,KAAtB,CAAP;AACD;;AAED,WAAO,CAACkB,eAAOC,SAAR,EAAmBnB,KAAnB,CAAP;AACD,GAVsB,EAUpB,CAACA,KAAD,CAVoB,CAAvB;AAYA,sBACE,6BAAC,4CAAD;AACE,IAAA,GAAG,EAAEG,aADP;AAEE,IAAA,OAAO,EAAEC,2BAFX;AAGE,IAAA,oBAAoB,EAAEE,oBAHxB;AAIE,IAAA,uBAAuB,EAAE,KAJ3B;AAKE,IAAA,OAAO,EAAEE,OALX;AAME,IAAA,cAAc,EAAEH,wBANlB;AAOE,IAAA,aAAa,EAAEI,aAPjB;AAQE,IAAA,aAAa,EAAEC,aARjB;AASE,IAAA,WAAW,EAAEC,WATf;AAUE,IAAA,WAAW,EAAEC;AAVf,kBAYE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEK;AAAtB,KAA0Cf,IAA1C,GACGD,QADH,CAZF,CADF;AAkBD,CAvED;;AAyEA,MAAMmB,wBAAwB,gBAAG,iBAAKtB,iCAAL,CAAjC;AACAsB,wBAAwB,CAACC,WAAzB,GAAuC,0BAAvC;eAEeD,wB","sourcesContent":["import React, { useMemo, useRef, memo } from 'react';\nimport Animated from 'react-native-reanimated';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport { useBottomSheetInternal } from '../../hooks';\nimport type { BottomSheetDraggableViewProps } from './types';\nimport { styles } from './styles';\n\nconst BottomSheetDraggableViewComponent = ({\n  nativeGestureRef,\n  style,\n  children,\n  ...rest\n}: BottomSheetDraggableViewProps) => {\n  // refs\n  const panGestureRef = useRef<PanGestureHandler>(null);\n\n  // hooks\n  const {\n    enableContentPanningGesture,\n    contentPanGestureHandler,\n    simultaneousHandlers: _providedSimultaneousHandlers,\n    waitFor,\n    activeOffsetX,\n    activeOffsetY,\n    failOffsetX,\n    failOffsetY,\n  } = useBottomSheetInternal();\n\n  // variables\n  const simultaneousHandlers = useMemo(() => {\n    const refs = [];\n\n    if (nativeGestureRef) {\n      refs.push(nativeGestureRef);\n    }\n\n    if (_providedSimultaneousHandlers) {\n      if (Array.isArray(_providedSimultaneousHandlers)) {\n        refs.push(..._providedSimultaneousHandlers);\n      } else {\n        refs.push(_providedSimultaneousHandlers);\n      }\n    }\n\n    return refs;\n  }, [_providedSimultaneousHandlers, nativeGestureRef]);\n\n  // styles\n  const containerStyle = useMemo(() => {\n    if (!style) {\n      return styles.container;\n    }\n\n    if (Array.isArray(style)) {\n      return [styles.container, ...style];\n    }\n\n    return [styles.container, style];\n  }, [style]);\n\n  return (\n    <PanGestureHandler\n      ref={panGestureRef}\n      enabled={enableContentPanningGesture}\n      simultaneousHandlers={simultaneousHandlers}\n      shouldCancelWhenOutside={false}\n      waitFor={waitFor}\n      onGestureEvent={contentPanGestureHandler}\n      activeOffsetX={activeOffsetX}\n      activeOffsetY={activeOffsetY}\n      failOffsetX={failOffsetX}\n      failOffsetY={failOffsetY}\n    >\n      <Animated.View style={containerStyle} {...rest}>\n        {children}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n\nconst BottomSheetDraggableView = memo(BottomSheetDraggableViewComponent);\nBottomSheetDraggableView.displayName = 'BottomSheetDraggableView';\n\nexport default BottomSheetDraggableView;\n"]}