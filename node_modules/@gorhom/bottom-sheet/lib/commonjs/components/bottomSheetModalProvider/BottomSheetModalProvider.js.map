{"version":3,"sources":["BottomSheetModalProvider.tsx"],"names":["BottomSheetModalProviderWrapper","children","containerHeight","setContainerHeight","WINDOW_HEIGHT","sheetsQueueRef","handleOnContainerMeasureHeight","height","handleMountSheet","key","ref","stackBehavior","_sheetsQueue","current","slice","sheetIndex","findIndex","item","sheetOnTop","length","currentMountedSheet","willUnmount","MODAL_STACK_BEHAVIOR","replace","minimize","splice","restore","push","handleUnmountSheet","hasMinimizedSheet","minimizedSheet","handleWillUnmountSheet","handleDismiss","sheetToBeDismissed","find","dismiss","handleDismissAll","map","externalContextVariables","dismissAll","internalContextVariables","mountSheet","unmountSheet","willUnmountSheet"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { PortalProvider } from '@gorhom/portal';\nimport {\n  BottomSheetModalProvider,\n  BottomSheetModalInternalProvider,\n} from '../../contexts';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport { MODAL_STACK_BEHAVIOR, WINDOW_HEIGHT } from '../../constants';\nimport type { BottomSheetModalStackBehavior } from '../bottomSheetModal';\nimport type {\n  BottomSheetModalProviderProps,\n  BottomSheetModalRef,\n} from './types';\n\nconst BottomSheetModalProviderWrapper = ({\n  children,\n}: BottomSheetModalProviderProps) => {\n  //#region layout state\n  const [containerHeight, setContainerHeight] = useState(WINDOW_HEIGHT);\n  //#endregion\n\n  //#region variables\n  const sheetsQueueRef = useRef<BottomSheetModalRef[]>([]);\n  //#endregion\n\n  //#region callback\n  const handleOnContainerMeasureHeight = useCallback((height: number) => {\n    setContainerHeight(height);\n  }, []);\n  //#endregion\n\n  //#region private methods\n  const handleMountSheet = useCallback(\n    (key: string, ref: any, stackBehavior: BottomSheetModalStackBehavior) => {\n      const _sheetsQueue = sheetsQueueRef.current.slice();\n      const sheetIndex = _sheetsQueue.findIndex(item => item.key === key);\n      const sheetOnTop = sheetIndex === _sheetsQueue.length - 1;\n\n      /**\n       * Exit the method, if sheet is already presented\n       * and at the top.\n       */\n      if (sheetIndex !== -1 && sheetOnTop) {\n        return;\n      }\n\n      /**\n       * Minimize the current sheet if:\n       * - it exists.\n       * - it is not unmounting.\n       * - stack behavior is 'replace'.\n       */\n      const currentMountedSheet = _sheetsQueue[_sheetsQueue.length - 1];\n      if (\n        currentMountedSheet &&\n        !currentMountedSheet.willUnmount &&\n        stackBehavior === MODAL_STACK_BEHAVIOR.replace\n      ) {\n        currentMountedSheet.ref.current.minimize();\n      }\n\n      /**\n       * Restore and remove incoming sheet from the queue,\n       * if it was registered.\n       */\n      if (sheetIndex !== -1) {\n        _sheetsQueue.splice(sheetIndex, 1);\n        ref.current.restore();\n      }\n\n      _sheetsQueue.push({\n        key,\n        ref,\n        willUnmount: false,\n      });\n      sheetsQueueRef.current = _sheetsQueue;\n    },\n    []\n  );\n  const handleUnmountSheet = useCallback((key: string) => {\n    const _sheetsQueue = sheetsQueueRef.current.slice();\n    const sheetIndex = _sheetsQueue.findIndex(item => item.key === key);\n    const sheetOnTop = sheetIndex === _sheetsQueue.length - 1;\n\n    /**\n     * Here we remove the unmounted sheet and update\n     * the sheets queue.\n     */\n    _sheetsQueue.splice(sheetIndex, 1);\n    sheetsQueueRef.current = _sheetsQueue;\n\n    /**\n     * Here we try to restore previous sheet position if unmounted\n     * sheet was on top. This is needed when user dismiss\n     * the modal by panning down.\n     */\n    const hasMinimizedSheet = sheetsQueueRef.current.length > 0;\n    const minimizedSheet =\n      sheetsQueueRef.current[sheetsQueueRef.current.length - 1];\n    if (\n      sheetOnTop &&\n      hasMinimizedSheet &&\n      minimizedSheet &&\n      !minimizedSheet.willUnmount\n    ) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 1\n      ].ref.current.restore();\n    }\n  }, []);\n  const handleWillUnmountSheet = useCallback((key: string) => {\n    const _sheetsQueue = sheetsQueueRef.current.slice();\n    const sheetIndex = _sheetsQueue.findIndex(item => item.key === key);\n    const sheetOnTop = sheetIndex === _sheetsQueue.length - 1;\n\n    /**\n     * Here we mark the sheet that will unmount,\n     * so it won't be restored.\n     */\n    if (sheetIndex !== -1) {\n      _sheetsQueue[sheetIndex].willUnmount = true;\n    }\n\n    /**\n     * Here we try to restore previous sheet position,\n     * This is needed when user dismiss the modal by fire the dismiss action.\n     */\n    const hasMinimizedSheet = _sheetsQueue.length > 1;\n    if (sheetOnTop && hasMinimizedSheet) {\n      _sheetsQueue[_sheetsQueue.length - 2].ref.current.restore();\n    }\n\n    sheetsQueueRef.current = _sheetsQueue;\n  }, []);\n  //#endregion\n\n  //#region public methods\n  const handleDismiss = useCallback((key: string) => {\n    const sheetToBeDismissed = sheetsQueueRef.current.find(\n      item => item.key === key\n    );\n    if (sheetToBeDismissed) {\n      sheetToBeDismissed.ref.current.dismiss(true);\n    }\n  }, []);\n  const handleDismissAll = useCallback(() => {\n    sheetsQueueRef.current.map(item => {\n      item.ref.current.dismiss(true);\n    });\n  }, []);\n  //#endregion\n\n  //#region context variables\n  const externalContextVariables = useMemo(\n    () => ({\n      dismiss: handleDismiss,\n      dismissAll: handleDismissAll,\n    }),\n    [handleDismiss, handleDismissAll]\n  );\n  const internalContextVariables = useMemo(\n    () => ({\n      containerHeight,\n      mountSheet: handleMountSheet,\n      unmountSheet: handleUnmountSheet,\n      willUnmountSheet: handleWillUnmountSheet,\n    }),\n    [\n      containerHeight,\n      handleMountSheet,\n      handleUnmountSheet,\n      handleWillUnmountSheet,\n    ]\n  );\n  //#endregion\n\n  //#region renders\n  return (\n    <BottomSheetModalProvider value={externalContextVariables}>\n      <BottomSheetModalInternalProvider value={internalContextVariables}>\n        <BottomSheetContainer\n          shouldMeasureHeight={true}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n          children={null}\n        />\n        <PortalProvider>{children}</PortalProvider>\n      </BottomSheetModalInternalProvider>\n    </BottomSheetModalProvider>\n  );\n  //#endregion\n};\n\nexport default BottomSheetModalProviderWrapper;\n"]}