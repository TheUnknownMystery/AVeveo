{"version":3,"sources":["SectionList.tsx"],"names":["AnimatedSectionList","Animated","createAnimatedComponent","RNSectionList","BottomSheetSectionListName","BottomSheetSectionListComponent","props","ref","focusHook","useFocusHook","useEffect","overScrollMode","rest","nativeGestureRef","scrollableRef","scrollableAnimatedProps","handleScrollEvent","handleSettingScrollable","enableContentPanningGesture","current","styles","container","BottomSheetSectionList","displayName"],"mappings":";;;;;;;AAAA;;AAQA;;AAIA;;AACA;;AACA;;AACA;;AAKA;;;;;;;;;;AAEA,MAAMA,mBAAmB,GAAGC,+BAASC,uBAAT,CAE1BC,wBAF0B,CAA5B;;AAIA,MAAMC,0BAA0B,GAAG,aAAnC;AAEA,MAAMC,+BAA+B,gBAAG,uBACtC,CAACC,KAAD,EAA0CC,GAA1C,KAAsE;AACpE;AACA,QAAM;AACJC,IAAAA,SAAS,EAAEC,YAAY,GAAGC,gBADtB;AAEJC,IAAAA,cAAc,GAAG,OAFb;AAGJ,OAAGC;AAHC,MAIFN,KAJJ,CAFoE,CAQpE;;AACA,QAAMO,gBAAgB,GAAG,mBAAiC,IAAjC,CAAzB,CAToE,CAWpE;;AACA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,uBAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA;AAJI,MAKF,kCAAsBb,0BAAtB,CALJ;AAMA,QAAM;AAAEc,IAAAA;AAAF,MAAkC,oCAAxC,CAlBoE,CAoBpE;AACA;;AACA,kCAAoBX,GAApB,EAAyB,MAAMO,aAAa,CAACK,OAA7C;AACAV,EAAAA,YAAY,CAACQ,uBAAD,CAAZ,CAvBoE,CAyBpE;;AACA,sBACE,6BAAC,iCAAD;AACE,IAAA,gBAAgB,EAAEJ,gBADpB;AAEE,IAAA,KAAK,EAAEO,eAAOC;AAFhB,kBAIE,6BAAC,mDAAD;AACE,IAAA,GAAG,EAAER,gBADP;AAEE,IAAA,OAAO,EAAEK,2BAFX;AAGE,IAAA,uBAAuB,EAAE;AAH3B,kBAKE,6BAAC,mBAAD,eACMN,IADN;AAEE;AACA,IAAA,GAAG,EAAEE,aAHP;AAIE,IAAA,cAAc,EAAEH,cAJlB;AAKE,IAAA,mBAAmB,EAAE,EALvB;AAME,IAAA,iBAAiB,EAAEK,iBANrB,CAOE;AAPF;AAQE,IAAA,aAAa,EAAED;AARjB,KALF,CAJF,CADF;AAuBD,CAlDqC,CAAxC;AAqDA,MAAMO,sBAAsB,gBAAG,iBAAKjB,+BAAL,CAA/B;AACAiB,sBAAsB,CAACC,WAAvB,GAAqC,wBAArC;eAEgBD,sB","sourcesContent":["import React, {\n  useImperativeHandle,\n  useEffect,\n  useRef,\n  Ref,\n  forwardRef,\n  memo,\n} from 'react';\nimport {\n  SectionList as RNSectionList,\n  SectionListProps as RNSectionListProps,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NativeViewGestureHandler } from 'react-native-gesture-handler';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport { useScrollableInternal, useBottomSheetInternal } from '../../hooks';\nimport type {\n  BottomSheetSectionListProps,\n  BottomSheetSectionListType,\n} from './types';\nimport { styles } from './styles';\n\nconst AnimatedSectionList = Animated.createAnimatedComponent<\n  RNSectionListProps<any>\n>(RNSectionList);\n\nconst BottomSheetSectionListName = 'SectionList';\n\nconst BottomSheetSectionListComponent = forwardRef(\n  (props: BottomSheetSectionListProps<any>, ref: Ref<RNSectionList>) => {\n    // props\n    const {\n      focusHook: useFocusHook = useEffect,\n      overScrollMode = 'never',\n      ...rest\n    } = props;\n\n    // refs\n    const nativeGestureRef = useRef<NativeViewGestureHandler>(null);\n\n    // hooks\n    const {\n      scrollableRef,\n      scrollableAnimatedProps,\n      handleScrollEvent,\n      handleSettingScrollable,\n    } = useScrollableInternal(BottomSheetSectionListName);\n    const { enableContentPanningGesture } = useBottomSheetInternal();\n\n    // effects\n    // @ts-ignore\n    useImperativeHandle(ref, () => scrollableRef.current);\n    useFocusHook(handleSettingScrollable);\n\n    // render\n    return (\n      <BottomSheetDraggableView\n        nativeGestureRef={nativeGestureRef}\n        style={styles.container}\n      >\n        <NativeViewGestureHandler\n          ref={nativeGestureRef}\n          enabled={enableContentPanningGesture}\n          shouldCancelWhenOutside={false}\n        >\n          <AnimatedSectionList\n            {...rest}\n            // @ts-ignore\n            ref={scrollableRef}\n            overScrollMode={overScrollMode}\n            scrollEventThrottle={16}\n            onScrollBeginDrag={handleScrollEvent}\n            // @ts-ignore\n            animatedProps={scrollableAnimatedProps}\n          />\n        </NativeViewGestureHandler>\n      </BottomSheetDraggableView>\n    );\n  }\n);\n\nconst BottomSheetSectionList = memo(BottomSheetSectionListComponent);\nBottomSheetSectionList.displayName = 'BottomSheetSectionList';\n\nexport default (BottomSheetSectionList as any) as typeof BottomSheetSectionListType;\n"]}