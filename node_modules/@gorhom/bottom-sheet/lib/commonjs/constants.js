"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KEYBOARD_DISMISS_THRESHOLD = exports.KEYBOARD_BLUR_BEHAVIOR = exports.KEYBOARD_BEHAVIOR = exports.MODAL_STACK_BEHAVIOR = exports.SCROLLABLE_DECELERATION_RATE_MAPPER = exports.WINDOW_WIDTH = exports.WINDOW_HEIGHT = exports.ANIMATION_METHOD = exports.KEYBOARD_STATE = exports.SCROLLABLE_STATE = exports.ANIMATION_STATE = exports.SHEET_STATE = exports.GESTURE = void 0;

var _reactNative = require("react-native");

const {
  height: WINDOW_HEIGHT,
  width: WINDOW_WIDTH
} = _reactNative.Dimensions.get('window');

exports.WINDOW_WIDTH = WINDOW_WIDTH;
exports.WINDOW_HEIGHT = WINDOW_HEIGHT;
var GESTURE;
exports.GESTURE = GESTURE;

(function (GESTURE) {
  GESTURE[GESTURE["UNDETERMINED"] = 0] = "UNDETERMINED";
  GESTURE[GESTURE["CONTENT"] = 1] = "CONTENT";
  GESTURE[GESTURE["HANDLE"] = 2] = "HANDLE";
})(GESTURE || (exports.GESTURE = GESTURE = {}));

var SHEET_STATE;
exports.SHEET_STATE = SHEET_STATE;

(function (SHEET_STATE) {
  SHEET_STATE[SHEET_STATE["CLOSED"] = 0] = "CLOSED";
  SHEET_STATE[SHEET_STATE["OPENED"] = 1] = "OPENED";
  SHEET_STATE[SHEET_STATE["EXTENDED"] = 2] = "EXTENDED";
  SHEET_STATE[SHEET_STATE["OVER_EXTENDED"] = 3] = "OVER_EXTENDED";
  SHEET_STATE[SHEET_STATE["FULL_SCREEN"] = 4] = "FULL_SCREEN";
})(SHEET_STATE || (exports.SHEET_STATE = SHEET_STATE = {}));

var SCROLLABLE_STATE;
exports.SCROLLABLE_STATE = SCROLLABLE_STATE;

(function (SCROLLABLE_STATE) {
  SCROLLABLE_STATE[SCROLLABLE_STATE["LOCKED"] = 0] = "LOCKED";
  SCROLLABLE_STATE[SCROLLABLE_STATE["UNLOCKED"] = 1] = "UNLOCKED";
})(SCROLLABLE_STATE || (exports.SCROLLABLE_STATE = SCROLLABLE_STATE = {}));

var ANIMATION_STATE;
exports.ANIMATION_STATE = ANIMATION_STATE;

(function (ANIMATION_STATE) {
  ANIMATION_STATE[ANIMATION_STATE["UNDETERMINED"] = 0] = "UNDETERMINED";
  ANIMATION_STATE[ANIMATION_STATE["RUNNING"] = 1] = "RUNNING";
  ANIMATION_STATE[ANIMATION_STATE["STOPPED"] = 2] = "STOPPED";
})(ANIMATION_STATE || (exports.ANIMATION_STATE = ANIMATION_STATE = {}));

var KEYBOARD_STATE;
exports.KEYBOARD_STATE = KEYBOARD_STATE;

(function (KEYBOARD_STATE) {
  KEYBOARD_STATE[KEYBOARD_STATE["UNDETERMINED"] = 0] = "UNDETERMINED";
  KEYBOARD_STATE[KEYBOARD_STATE["SHOWN"] = 1] = "SHOWN";
  KEYBOARD_STATE[KEYBOARD_STATE["HIDDEN"] = 2] = "HIDDEN";
})(KEYBOARD_STATE || (exports.KEYBOARD_STATE = KEYBOARD_STATE = {}));

var ANIMATION_METHOD;
exports.ANIMATION_METHOD = ANIMATION_METHOD;

(function (ANIMATION_METHOD) {
  ANIMATION_METHOD[ANIMATION_METHOD["TIMING"] = 0] = "TIMING";
  ANIMATION_METHOD[ANIMATION_METHOD["SPRING"] = 1] = "SPRING";
})(ANIMATION_METHOD || (exports.ANIMATION_METHOD = ANIMATION_METHOD = {}));

const SCROLLABLE_DECELERATION_RATE_MAPPER = {
  [SCROLLABLE_STATE.LOCKED]: 0,
  [SCROLLABLE_STATE.UNLOCKED]: _reactNative.Platform.select({
    ios: 0.998,
    android: 0.985,
    default: 1
  })
};
exports.SCROLLABLE_DECELERATION_RATE_MAPPER = SCROLLABLE_DECELERATION_RATE_MAPPER;
const MODAL_STACK_BEHAVIOR = {
  replace: 'replace',
  push: 'push'
};
exports.MODAL_STACK_BEHAVIOR = MODAL_STACK_BEHAVIOR;
const KEYBOARD_BEHAVIOR = {
  none: 'none',
  extend: 'extend',
  fullScreen: 'fullScreen',
  interactive: 'interactive'
};
exports.KEYBOARD_BEHAVIOR = KEYBOARD_BEHAVIOR;
const KEYBOARD_BLUR_BEHAVIOR = {
  none: 'none',
  restore: 'restore'
};
exports.KEYBOARD_BLUR_BEHAVIOR = KEYBOARD_BLUR_BEHAVIOR;
const KEYBOARD_DISMISS_THRESHOLD = 12.5;
exports.KEYBOARD_DISMISS_THRESHOLD = KEYBOARD_DISMISS_THRESHOLD;
//# sourceMappingURL=constants.js.map