{"version":3,"sources":["useScrollableInternal.ts"],"names":["useScrollableInternal","type","scrollableRef","scrollableContentOffsetY","justStartedScrolling","initialScrollingPosition","scrollableState","animationState","_rootScrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollableAnimatedProps","decelerationRate","SCROLLABLE_DECELERATION_RATE_MAPPER","value","handleScrollEvent","onBeginDrag","contentOffset","y","SCROLLABLE_STATE","LOCKED","onScroll","Platform","OS","onEndDrag","ANIMATION_STATE","RUNNING","onMomentumEnd","handleSettingScrollable","id","current","node","didResize","console","warn"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\nimport { findNodeHandle, NativeScrollEvent, Platform } from 'react-native';\nimport {\n  useAnimatedRef,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  scrollTo,\n  runOnUI,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { useBottomSheetInternal } from './useBottomSheetInternal';\nimport type { Scrollable, ScrollableType } from '../types';\nimport {\n  ANIMATION_STATE,\n  SCROLLABLE_DECELERATION_RATE_MAPPER,\n  SCROLLABLE_STATE,\n} from '../constants';\n\nexport const useScrollableInternal = (type: ScrollableType) => {\n  // refs\n  const scrollableRef = useAnimatedRef<Scrollable>();\n  const scrollableContentOffsetY = useSharedValue<number>(0);\n  const justStartedScrolling = useSharedValue<number>(0);\n  const initialScrollingPosition = useSharedValue<number>(0);\n\n  // hooks\n  const {\n    scrollableState,\n    animationState,\n    scrollableContentOffsetY: _rootScrollableContentOffsetY,\n    setScrollableRef,\n    removeScrollableRef,\n  } = useBottomSheetInternal();\n\n  // variables\n  const scrollableAnimatedProps = useAnimatedProps(() => ({\n    decelerationRate:\n      SCROLLABLE_DECELERATION_RATE_MAPPER[scrollableState.value],\n  }));\n\n  // callbacks\n  const handleScrollEvent = useAnimatedScrollHandler({\n    onBeginDrag: ({ contentOffset: { y } }: NativeScrollEvent) => {\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        initialScrollingPosition.value = y;\n        justStartedScrolling.value = 1;\n        scrollableContentOffsetY.value = 0;\n        _rootScrollableContentOffsetY.value = 0;\n        return;\n      }\n      scrollableContentOffsetY.value = y;\n      _rootScrollableContentOffsetY.value = y;\n    },\n    onScroll: () => {\n      if (Platform.OS === 'android' && justStartedScrolling.value === 1) {\n        justStartedScrolling.value = 0;\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, initialScrollingPosition.value, false);\n        return;\n      }\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, 0, false);\n        scrollableContentOffsetY.value = 0;\n        return;\n      }\n    },\n    onEndDrag: ({ contentOffset: { y } }: NativeScrollEvent) => {\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, 0, false);\n        scrollableContentOffsetY.value = 0;\n        return;\n      }\n      if (animationState.value !== ANIMATION_STATE.RUNNING) {\n        scrollableContentOffsetY.value = y;\n        _rootScrollableContentOffsetY.value = y;\n      }\n    },\n    onMomentumEnd: ({ contentOffset: { y } }: NativeScrollEvent) => {\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, 0, false);\n        scrollableContentOffsetY.value = 0;\n        return;\n      }\n      if (animationState.value !== ANIMATION_STATE.RUNNING) {\n        scrollableContentOffsetY.value = y;\n        _rootScrollableContentOffsetY.value = y;\n      }\n    },\n  });\n  const handleSettingScrollable = useCallback(() => {\n    // set current content offset\n    runOnUI(() => {\n      _rootScrollableContentOffsetY.value = scrollableContentOffsetY.value;\n    })();\n\n    // set current scrollable ref\n    const id = findNodeHandle(scrollableRef.current);\n    if (id) {\n      setScrollableRef({\n        id: id,\n        type,\n        node: scrollableRef,\n        didResize: false,\n      });\n    } else {\n      console.warn(`Couldn't find the scrollable node handle id!`);\n    }\n\n    return () => {\n      removeScrollableRef(scrollableRef);\n    };\n  }, [\n    _rootScrollableContentOffsetY,\n    removeScrollableRef,\n    scrollableContentOffsetY,\n    scrollableRef,\n    setScrollableRef,\n    type,\n  ]);\n\n  return {\n    scrollableRef,\n    scrollableAnimatedProps,\n    handleScrollEvent,\n    handleSettingScrollable,\n  };\n};\n"]}