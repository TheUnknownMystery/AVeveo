{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["React","memo","useCallback","useMemo","useRef","Animated","interpolate","Extrapolate","useAnimatedStyle","useAnimatedReaction","useAnimatedGestureHandler","runOnJS","TapGestureHandler","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","usePressBehavior","styles","BottomSheetBackdropComponent","animatedIndex","opacity","appearsOnIndex","disappearsOnIndex","enableTouchThrough","pressBehavior","closeOnPress","style","handleOnPress","syntheticPressBehavior","containerRef","pointerEvents","handleContainerTouchability","shouldDisableTouchability","current","setNativeProps","gestureHandler","onFinish","containerAnimatedStyle","value","CLAMP","flex","containerStyle","container","previous","BottomSheetBackdrop","displayName"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useRef } from 'react';\nimport Animated, {\n  interpolate,\n  Extrapolate,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useAnimatedGestureHandler,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n} from './constants';\nimport { usePressBehavior } from './usePressBehavior';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity = DEFAULT_OPACITY,\n  appearsOnIndex = DEFAULT_APPEARS_ON_INDEX,\n  disappearsOnIndex = DEFAULT_DISAPPEARS_ON_INDEX,\n  enableTouchThrough = DEFAULT_ENABLE_TOUCH_THROUGH,\n  pressBehavior,\n  closeOnPress,\n  style,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { handleOnPress, syntheticPressBehavior } = usePressBehavior({\n    pressBehavior,\n    closeOnPress,\n    disappearsOnIndex,\n  });\n  //#endregion\n\n  //#region variables\n  const containerRef = useRef<Animated.View>(null);\n  const pointerEvents = useMemo(() => (enableTouchThrough ? 'none' : 'auto'), [\n    enableTouchThrough,\n  ]);\n  //#endregion\n\n  //#region callbacks\n  const handleContainerTouchability = useCallback(\n    (shouldDisableTouchability: boolean) => {\n      if (!containerRef.current) {\n        return;\n      }\n      // @ts-ignore\n      containerRef.current.setNativeProps({\n        pointerEvents: shouldDisableTouchability ? 'none' : 'auto',\n      });\n    },\n    []\n  );\n  //#endregion\n\n  //#region tap gesture\n  const gestureHandler = useAnimatedGestureHandler<TapGestureHandlerGestureEvent>(\n    {\n      onFinish: () => {\n        runOnJS(handleOnPress)();\n      },\n    },\n    [handleOnPress]\n  );\n  //#endregion\n\n  //#region styles\n  const containerAnimatedStyle = useAnimatedStyle(() => ({\n    opacity: interpolate(\n      animatedIndex.value,\n      [-1, disappearsOnIndex, appearsOnIndex],\n      [0, 0, opacity],\n      Extrapolate.CLAMP\n    ),\n    flex: 1,\n  }));\n  const containerStyle = useMemo(\n    () => [styles.container, style, containerAnimatedStyle],\n    [style, containerAnimatedStyle]\n  );\n  //#endregion\n\n  //#region effects\n  useAnimatedReaction(\n    () => animatedIndex.value <= disappearsOnIndex,\n    (shouldDisableTouchability, previous) => {\n      if (shouldDisableTouchability === previous) {\n        return;\n      }\n      runOnJS(handleContainerTouchability)(shouldDisableTouchability);\n    },\n    [disappearsOnIndex]\n  );\n  //#endregion\n\n  return syntheticPressBehavior !== 'none' ? (\n    <TapGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View\n        ref={containerRef}\n        style={containerStyle}\n        accessible={true}\n        accessibilityRole=\"button\"\n        accessibilityLabel=\"Bottom Sheet backdrop\"\n        accessibilityHint={`Tap to ${\n          typeof syntheticPressBehavior === 'string'\n            ? syntheticPressBehavior\n            : 'move'\n        } the Bottom Sheet`}\n      />\n    </TapGestureHandler>\n  ) : (\n    <Animated.View\n      ref={containerRef}\n      pointerEvents={pointerEvents}\n      style={containerStyle}\n    />\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent);\nBottomSheetBackdrop.displayName = 'BottomSheetBackdrop';\n\nexport default BottomSheetBackdrop;\n"]}