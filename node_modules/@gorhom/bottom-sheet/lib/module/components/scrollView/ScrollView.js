function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useRef, useImperativeHandle, useEffect, forwardRef, memo } from 'react';
import { ScrollView as RNScrollView } from 'react-native';
import Animated from 'react-native-reanimated';
import { NativeViewGestureHandler } from 'react-native-gesture-handler';
import BottomSheetDraggableView from '../bottomSheetDraggableView';
import { useScrollableInternal, useBottomSheetInternal } from '../../hooks';
import { styles } from './styles';
const AnimatedScrollView = Animated.createAnimatedComponent(RNScrollView);
const BottomSheetScrollViewName = 'ScrollView';
const BottomSheetScrollViewComponent = /*#__PURE__*/forwardRef((props, ref) => {
  // props
  const {
    focusHook: useFocusHook = useEffect,
    overScrollMode = 'never',
    ...rest
  } = props; // refs

  const nativeGestureRef = useRef(null); // hooks

  const {
    scrollableRef,
    scrollableAnimatedProps,
    handleScrollEvent,
    handleSettingScrollable
  } = useScrollableInternal(BottomSheetScrollViewName);
  const {
    enableContentPanningGesture
  } = useBottomSheetInternal(); // effects
  // @ts-ignore

  useImperativeHandle(ref, () => scrollableRef.current);
  useFocusHook(handleSettingScrollable);
  return /*#__PURE__*/React.createElement(BottomSheetDraggableView, {
    nativeGestureRef: nativeGestureRef,
    style: styles.container
  }, /*#__PURE__*/React.createElement(NativeViewGestureHandler, {
    ref: nativeGestureRef,
    enabled: enableContentPanningGesture,
    shouldCancelWhenOutside: false
  }, /*#__PURE__*/React.createElement(AnimatedScrollView, _extends({}, rest, {
    // @ts-ignore
    ref: scrollableRef,
    overScrollMode: overScrollMode,
    scrollEventThrottle: 16,
    onScrollBeginDrag: handleScrollEvent // @ts-ignore
    ,
    animatedProps: scrollableAnimatedProps
  }))));
});
const BottomSheetScrollView = /*#__PURE__*/memo(BottomSheetScrollViewComponent);
BottomSheetScrollView.displayName = 'BottomSheetScrollView';
export default BottomSheetScrollView;
//# sourceMappingURL=ScrollView.js.map