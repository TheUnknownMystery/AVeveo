{"version":3,"sources":["useReactiveSharedValue.ts"],"names":["useEffect","useRef","cancelAnimation","makeMutable","useReactiveSharedValue","value","ref","current"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SACEC,eADF,EAEEC,WAFF,QAGO,yBAHP;AAKA,OAAO,MAAMC,sBAAsB,GACjCC,KADoC,IAER;AAC5B,QAAMC,GAAG,GAAGL,MAAM,CAA0B,IAA1B,CAAlB;;AAEA,MAAIK,GAAG,CAACC,OAAJ,KAAgB,IAApB,EAA0B;AACxB;AACAD,IAAAA,GAAG,CAACC,OAAJ,GAAcJ,WAAW,CAACE,KAAD,CAAzB;AACD,GAHD,MAGO,IAAIC,GAAG,CAACC,OAAJ,CAAYF,KAAZ,KAAsBA,KAA1B,EAAiC;AACtCC,IAAAA,GAAG,CAACC,OAAJ,CAAYF,KAAZ,GAAoBA,KAApB;AACD;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIM,GAAG,CAACC,OAAR,EAAiB;AACfL,QAAAA,eAAe,CAACI,GAAG,CAACC,OAAL,CAAf;AACD;AACF,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOD,GAAG,CAACC,OAAX;AACD,CArBM","sourcesContent":["import { useEffect, useRef } from 'react';\nimport Animated, {\n  cancelAnimation,\n  makeMutable,\n} from 'react-native-reanimated';\n\nexport const useReactiveSharedValue = <T>(\n  value: T\n): Animated.SharedValue<T> => {\n  const ref = useRef<Animated.SharedValue<T>>(null);\n\n  if (ref.current === null) {\n    // @ts-ignore\n    ref.current = makeMutable(value);\n  } else if (ref.current.value !== value) {\n    ref.current.value = value;\n  }\n\n  useEffect(() => {\n    return () => {\n      if (ref.current) {\n        cancelAnimation(ref.current);\n      }\n    };\n  }, []);\n\n  return ref.current;\n};\n"]}