{"version":3,"sources":["useScrollableInternal.ts"],"names":["useCallback","findNodeHandle","Platform","useAnimatedRef","useAnimatedScrollHandler","useSharedValue","scrollTo","runOnUI","useAnimatedProps","useBottomSheetInternal","ANIMATION_STATE","SCROLLABLE_DECELERATION_RATE_MAPPER","SCROLLABLE_STATE","useScrollableInternal","type","scrollableRef","scrollableContentOffsetY","justStartedScrolling","initialScrollingPosition","scrollableState","animationState","_rootScrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollableAnimatedProps","decelerationRate","value","handleScrollEvent","onBeginDrag","contentOffset","y","LOCKED","onScroll","OS","onEndDrag","RUNNING","onMomentumEnd","handleSettingScrollable","id","current","node","didResize","console","warn"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\nimport { findNodeHandle, NativeScrollEvent, Platform } from 'react-native';\nimport {\n  useAnimatedRef,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  scrollTo,\n  runOnUI,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { useBottomSheetInternal } from './useBottomSheetInternal';\nimport type { Scrollable, ScrollableType } from '../types';\nimport {\n  ANIMATION_STATE,\n  SCROLLABLE_DECELERATION_RATE_MAPPER,\n  SCROLLABLE_STATE,\n} from '../constants';\n\nexport const useScrollableInternal = (type: ScrollableType) => {\n  // refs\n  const scrollableRef = useAnimatedRef<Scrollable>();\n  const scrollableContentOffsetY = useSharedValue<number>(0);\n  const justStartedScrolling = useSharedValue<number>(0);\n  const initialScrollingPosition = useSharedValue<number>(0);\n\n  // hooks\n  const {\n    scrollableState,\n    animationState,\n    scrollableContentOffsetY: _rootScrollableContentOffsetY,\n    setScrollableRef,\n    removeScrollableRef,\n  } = useBottomSheetInternal();\n\n  // variables\n  const scrollableAnimatedProps = useAnimatedProps(() => ({\n    decelerationRate:\n      SCROLLABLE_DECELERATION_RATE_MAPPER[scrollableState.value],\n  }));\n\n  // callbacks\n  const handleScrollEvent = useAnimatedScrollHandler({\n    onBeginDrag: ({ contentOffset: { y } }: NativeScrollEvent) => {\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        initialScrollingPosition.value = y;\n        justStartedScrolling.value = 1;\n        scrollableContentOffsetY.value = 0;\n        _rootScrollableContentOffsetY.value = 0;\n        return;\n      }\n      scrollableContentOffsetY.value = y;\n      _rootScrollableContentOffsetY.value = y;\n    },\n    onScroll: () => {\n      if (Platform.OS === 'android' && justStartedScrolling.value === 1) {\n        justStartedScrolling.value = 0;\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, initialScrollingPosition.value, false);\n        return;\n      }\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, 0, false);\n        scrollableContentOffsetY.value = 0;\n        return;\n      }\n    },\n    onEndDrag: ({ contentOffset: { y } }: NativeScrollEvent) => {\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, 0, false);\n        scrollableContentOffsetY.value = 0;\n        return;\n      }\n      if (animationState.value !== ANIMATION_STATE.RUNNING) {\n        scrollableContentOffsetY.value = y;\n        _rootScrollableContentOffsetY.value = y;\n      }\n    },\n    onMomentumEnd: ({ contentOffset: { y } }: NativeScrollEvent) => {\n      if (scrollableState.value === SCROLLABLE_STATE.LOCKED) {\n        // @ts-ignore\n        scrollTo(scrollableRef, 0, 0, false);\n        scrollableContentOffsetY.value = 0;\n        return;\n      }\n      if (animationState.value !== ANIMATION_STATE.RUNNING) {\n        scrollableContentOffsetY.value = y;\n        _rootScrollableContentOffsetY.value = y;\n      }\n    },\n  });\n  const handleSettingScrollable = useCallback(() => {\n    // set current content offset\n    runOnUI(() => {\n      _rootScrollableContentOffsetY.value = scrollableContentOffsetY.value;\n    })();\n\n    // set current scrollable ref\n    const id = findNodeHandle(scrollableRef.current);\n    if (id) {\n      setScrollableRef({\n        id: id,\n        type,\n        node: scrollableRef,\n        didResize: false,\n      });\n    } else {\n      console.warn(`Couldn't find the scrollable node handle id!`);\n    }\n\n    return () => {\n      removeScrollableRef(scrollableRef);\n    };\n  }, [\n    _rootScrollableContentOffsetY,\n    removeScrollableRef,\n    scrollableContentOffsetY,\n    scrollableRef,\n    setScrollableRef,\n    type,\n  ]);\n\n  return {\n    scrollableRef,\n    scrollableAnimatedProps,\n    handleScrollEvent,\n    handleSettingScrollable,\n  };\n};\n"]}