import React from 'react';
import type { BottomSheetTextInputProps } from './types';
declare const BottomSheetTextInput: React.MemoExoticComponent<React.ForwardRefExoticComponent<Pick<BottomSheetTextInputProps, "value" | "waitFor" | "simultaneousHandlers" | "minPointers" | "id" | "enabled" | "shouldCancelWhenOutside" | "hitSlop" | "onBegan" | "onFailed" | "onCancelled" | "onActivated" | "onEnded" | "onGestureEvent" | "onHandlerStateChange" | "removeClippedSubviews" | "onLayout" | "onContentSizeChange" | "onScroll" | "scrollEnabled" | "style" | "pointerEvents" | "testID" | "nativeID" | "collapsable" | "needsOffscreenAlphaCompositing" | "renderToHardwareTextureAndroid" | "focusable" | "shouldRasterizeIOS" | "isTVSelectable" | "hasTVPreferredFocus" | "tvParallaxProperties" | "tvParallaxShiftDistanceX" | "tvParallaxShiftDistanceY" | "tvParallaxTiltAngle" | "tvParallaxMagnification" | "onStartShouldSetResponder" | "onMoveShouldSetResponder" | "onResponderEnd" | "onResponderGrant" | "onResponderReject" | "onResponderMove" | "onResponderRelease" | "onResponderStart" | "onResponderTerminationRequest" | "onResponderTerminate" | "onStartShouldSetResponderCapture" | "onMoveShouldSetResponderCapture" | "onTouchStart" | "onTouchMove" | "onTouchEnd" | "onTouchCancel" | "onTouchEndCapture" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityRole" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityComponentType" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityTraits" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "onChange" | "key" | "textAlignVertical" | "shouldActivateOnStart" | "disallowInterruption" | "onFocus" | "onBlur" | "allowFontScaling" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "blurOnSubmit" | "caretHidden" | "contextMenuHidden" | "defaultValue" | "editable" | "keyboardType" | "maxLength" | "multiline" | "onChangeText" | "onEndEditing" | "onSelectionChange" | "onSubmitEditing" | "onTextInput" | "onKeyPress" | "placeholder" | "placeholderTextColor" | "returnKeyType" | "secureTextEntry" | "selectTextOnFocus" | "selection" | "selectionColor" | "inputAccessoryViewID" | "maxFontSizeMultiplier" | "clearButtonMode" | "clearTextOnFocus" | "dataDetectorTypes" | "enablesReturnKeyAutomatically" | "keyboardAppearance" | "passwordRules" | "rejectResponderTermination" | "selectionState" | "spellCheck" | "textContentType" | "autoCompleteType" | "importantForAutofill" | "disableFullscreenUI" | "inlineImageLeft" | "inlineImagePadding" | "numberOfLines" | "returnKeyLabel" | "textBreakStrategy" | "underlineColorAndroid" | "showSoftInputOnFocus"> & React.RefAttributes<React.ForwardRefExoticComponent<import("react-native").TextInputProps & import("react-native-gesture-handler").NativeViewGestureHandlerProps & React.RefAttributes<React.ComponentType<any>>>>>>;
export default BottomSheetTextInput;
