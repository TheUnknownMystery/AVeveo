import Animated from 'react-native-reanimated';
import { State, PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';
import { GESTURE, KEYBOARD_BEHAVIOR, KEYBOARD_STATE } from '../constants';
interface useInteractivePanGestureHandlerConfigs {
    type: GESTURE;
    enableOverDrag: boolean;
    overDragResistanceFactor: number;
    isExtendedByKeyboard: Animated.SharedValue<boolean>;
    keyboardState: Animated.SharedValue<KEYBOARD_STATE>;
    keyboardHeight: Animated.SharedValue<number>;
    keyboardBehavior: keyof typeof KEYBOARD_BEHAVIOR;
    animatedSnapPoints: Animated.SharedValue<number[]>;
    animatedPosition: Animated.SharedValue<number>;
    scrollableContentOffsetY?: Animated.SharedValue<number>;
    animateToPoint: (point: number, velocity: number) => void;
}
export declare const useInteractivePanGestureHandler: ({ type, enableOverDrag, overDragResistanceFactor, keyboardState, keyboardBehavior, keyboardHeight, isExtendedByKeyboard, animatedPosition, animatedSnapPoints, scrollableContentOffsetY, animateToPoint, }: useInteractivePanGestureHandlerConfigs) => [(event: PanGestureHandlerGestureEvent) => void, Animated.SharedValue<State>, Animated.SharedValue<number>, Animated.SharedValue<number>];
export {};
